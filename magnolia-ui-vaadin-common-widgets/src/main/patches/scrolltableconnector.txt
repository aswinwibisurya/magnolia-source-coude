--- k1/src/main/java/com/vaadin/client/ui/table/TableConnector.java	2013-03-06 04:00:32.000000000 +0100
+++ k2/src/main/java/com/vaadin/client/ui/table/TableConnector.java	2013-04-30 14:50:07.000000000 +0100
@@ -35,15 +35,15 @@
 import com.vaadin.client.Util;
 import com.vaadin.client.ui.AbstractHasComponentsConnector;
 import com.vaadin.client.ui.PostLayoutListener;
-import com.vaadin.client.ui.VScrollTable;
-import com.vaadin.client.ui.VScrollTable.ContextMenuDetails;
-import com.vaadin.client.ui.VScrollTable.VScrollTableBody.VScrollTableRow;
+import com.vaadin.client.ui.VScrollTablePatched;
+import com.vaadin.client.ui.VScrollTablePatched.ContextMenuDetails;
+import com.vaadin.client.ui.VScrollTablePatched.VScrollTableBody.VScrollTableRow;
 import com.vaadin.shared.ui.Connect;
 import com.vaadin.shared.ui.table.TableConstants;
 import com.vaadin.shared.ui.table.TableState;

-@Connect(com.vaadin.ui.Table.class)
-public class TableConnector extends AbstractHasComponentsConnector implements
+//@Connect(com.vaadin.ui.Table.class)
+public class TableConnectorPatched extends AbstractHasComponentsConnector implements
         Paintable, DirectionalManagedLayout, PostLayoutListener {

     @Override
@@ -135,7 +135,8 @@

         getWidget().updatePageLength(uidl);

-        getWidget().updateFirstVisibleAndScrollIfNeeded(uidl);
+        // MGNLUI-960 Avoid TreeTable jump for the time it repaints
+        // getWidget().updateFirstVisibleAndScrollIfNeeded(uidl);

         getWidget().showRowHeaders = uidl.getBooleanAttribute("rowheaders");
         getWidget().showColHeaders = uidl.getBooleanAttribute("colheaders");
@@ -322,8 +323,8 @@
     }

     @Override
-    public VScrollTable getWidget() {
-        return (VScrollTable) super.getWidget();
+    public VScrollTablePatched getWidget() {
+        return (VScrollTablePatched) super.getWidget();
     }

     @Override
@@ -343,8 +344,8 @@

     @Override
     public void postLayout() {
-        VScrollTable table = getWidget();
-        if (table.sizeNeedsInit) {
+        VScrollTablePatched table = getWidget();
+        if (table.isVisibleInHierarchy() && table.sizeNeedsInit) {
             table.sizeInit();
             Scheduler.get().scheduleFinally(new ScheduledCommand() {
                 @Override
@@ -352,14 +353,14 @@
                     // IE8 needs some hacks to measure sizes correctly
                     Util.forceIE8Redraw(getWidget().getElement());

-                    getLayoutManager().setNeedsMeasure(TableConnector.this);
+                    getLayoutManager().setNeedsMeasure(TableConnectorPatched.this);
                     ServerConnector parent = getParent();
                     if (parent instanceof ComponentConnector) {
                         getLayoutManager().setNeedsMeasure(
                                 (ComponentConnector) parent);
                     }
                     getLayoutManager().setNeedsVerticalLayout(
-                            TableConnector.this);
+                            TableConnectorPatched.this);
                     getLayoutManager().layoutNow();
                 }
             });
@@ -395,7 +396,7 @@
         if (element != getWidget().getElement()) {
             Object node = Util.findWidget(
                     (com.google.gwt.user.client.Element) element,
-                    VScrollTableRow.class);
+                    getWidget().scrollBody.iterator().next().getClass());
 
             if (node != null) {
                 VScrollTableRow row = (VScrollTableRow) node;
